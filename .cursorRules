{
  "rules": [
    {
      "description": "Используй Composition API в коде компонентов.",
      "condition": "Если пишешь компонент Vue, используй Composition API и <script setup> вместо Options API."
    },
    {
      "description": "Форматируй код в соответствии с правилами ESLint и Prettier.",
      "condition": "Если код нарушает стандартные правила ESLint или Prettier, исправь его автоматически."
    },
    {
      "description": "Используй TypeScript и явно указывай типы.",
      "condition": "Если возможно, добавляй аннотации типов TypeScript для переменных и функций."
    },
    {
      "description": "Импортируй зависимости через `#imports`, если это возможно.",
      "condition": "Если можно использовать auto-import в Nuxt 3, используй его вместо обычного import."
    },
    {
      "description": "Используй useFetch и useAsyncData вместо обычного fetch().",
      "condition": "Если в коде есть запросы к API, используй useFetch или useAsyncData для реактивности."
    },
    {
      "description": "Добавляй и обновляй комментарии для AI.",
      "condition": "Если редактируется код, добавляй или обновляй комментарии, чтобы они помогали AI лучше понимать контекст и задачи."
    },
    {
      "description": "Используй `@` для импортов вместо относительных путей.",
      "condition": "Если импортируешь файл, используй @/ вместо ../../../"
    }
  ]
} 